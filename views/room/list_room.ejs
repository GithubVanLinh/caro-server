<!DOCTYPE html>
<html>
  <head>
    <title>Socket.IO chat</title>
    <title>Socket</title>
    <link rel="shortcut icon" href="" />
    <link
      rel="stylesheet"
      href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css"
    />
    <script src="https://d3js.org/d3.v4.min.js"></script>
    <!-------thu vien socket io cho phia client------>
    <style>
      body {
        margin: 0;
        padding-bottom: 3rem;
        font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto,
          Helvetica, Arial, sans-serif;
      }

      #form {
        background: rgba(0, 0, 0, 0.15);
        padding: 0.25rem;
        position: fixed;
        bottom: 0;
        left: 0;
        right: 0;
        display: flex;
        height: 3rem;
        box-sizing: border-box;
        backdrop-filter: blur(10px);
      }
      #input {
        border: none;
        padding: 0 1rem;
        flex-grow: 1;
        border-radius: 2rem;
        margin: 0.25rem;
      }
      #input:focus {
        outline: none;
      }
      #form > button {
        background: #333;
        border: none;
        padding: 0 1rem;
        margin: 0.25rem;
        border-radius: 3px;
        outline: none;
        color: #fff;
      }

      #messages {
        list-style-type: none;
        margin: 0;
        padding: 0;
      }
      #messages > li {
        padding: 0.5rem 1rem;
      }
      #messages > li:nth-child(odd) {
        background: #efefef;
      }
    </style>
  </head>
  <body>
    <div id="choose_game">
      <ul id="messages"></ul>
      <dialog id="type_your_name_dialog">
        <label for="name">Name Player</label>
        <input id="name" type="text" placeholder="name" required />
        <button type="button" id="btn_ok">OK</button>
      </dialog>
    </div>

    <div>
      <span id="nickname"></span>
      <span id="room"></span>
      <span id="turn"></span>
    </div>
    <div>
      <!-- <dialog id="dialog_ready">
        <button type="button" id="btn_ready">Ready</button>
        <button type="button" id="btn_cancel">Cancel</button>
      </dialog> -->
    </div>
    <dialog id="dialog_waiting">Waiting your opponent</dialog>
  </body>
  <script src="/socket.io/socket.io.js"></script>
  <script>
    function clear() {
      var bar = document.getElementById("choose_game");
      bar.hidden = true;
    }

    function drawboard() {
      const div = d3
        .select("body")
        .append("div")
        .attr("id", "content")
        .style("text-align", "center");
      // create <svg>
      let boxsize = 30; // kich thuoc cua moi o vuong
      let n = 20; // so luong o vuong tren 1 hang
      const svg = div
        .append("svg")
        .attr("width", boxsize * n)
        .attr("height", boxsize * n);
      //-------------------------------------------------------
      for (let i = 0; i < n; i++) {
        for (let j = 0; j < n; j++) {
          // draw each chess field
          const box = svg
            .append("rect")
            .attr("x", i * boxsize)
            .attr("y", j * boxsize)
            .attr("width", boxsize)
            .attr("height", boxsize)
            .attr("id", "b" + i + j)
            .style("stroke", "black")
            .on("click", function () {
              let selected = d3.select(this);
              socket.emit("on-box-click", {
                x: selected.attr("x") / boxsize,
                y: selected.attr("y") / boxsize,
              });
              console.log({
                x: selected.attr("x") / boxsize,
                y: selected.attr("y") / boxsize,
              });
            });
          if ((i + j) % 2 === 0) {
            box.attr("fill", "beige");
          } else {
            box.attr("fill", "beige");
          }
        }
      }
    }

    /**
     *
     */
    // function showDialogReady(socket) {
    //   var dialog = document.getElementById("dialog_ready");
    //   dialog.show();
    //   var buttonReady = dialog.getElementById("btn_ready");
    //   var buttonCancel = dialog.getElementById("btn_cancel");
    //   buttonReady.onclick = function () {
    //     console.log("ready");
    //     socket.emit("ready");
    //     dialog.close();
    //   };
    //   buttonCancel.onclick = function () {
    //     console.log("cancel");
    //     socket.emit("cancel");
    //     dialog.close();
    //   };
    // }

    function setTurn(turn) {
      var turnE = document.getElementById("turn");
      turnE.innerText = `Your turn is ${turn}`;
    }

    function showWaitingScreen() {
      document.getElementById("dialog_waiting").show();
    }

    function closeWaitingScreen() {
      document.getElementById("dialog_waiting").close();
    }
  </script>
  <script>
    var socket = io();

    var messages = document.getElementById("messages");
    var input = document.getElementById("input");
    var dialog = document.getElementById("type_your_name_dialog");

    socket.on("type-your-name", function () {
      dialog.show();
      document.getElementById("btn_ok").onclick = function () {
        const value = document.getElementById("name").value;
        socket.emit("type-your-name", value);

        document.getElementById("nickname").innerText = value;
        dialog.close();
      };
    });

    dialog.onclose = function () {
      console.log("in");
      socket.emit("room-list", { mes: "mes" });

      socket.on("room-list", function (msg) {
        console.log(msg);
        msg.forEach(function (m) {
          var item = document.createElement("button");
          item.innerText = m;

          item.onclick = function () {
            socket.emit("join-room", m);
          };

          messages.appendChild(item);
        });
      });
      socket.on("join-room-success", function (room_name) {
        clear();
        
      document.getElementById("room").innerText = room_name;
        showWaitingScreen();
      });
      socket.on("has-2-player", function () {
        closeWaitingScreen();
        // showDialogReady(socket);
        // var dialog = document.getElementById("dialog_ready");
        // dialog.show();
        // var buttonReady = document.getElementById("btn_ready");
        // var buttonCancel = document.getElementById("btn_cancel");
        // dialog.onclose = function () {
        //   alert("ready close");
        //   socket.on("game-start", function () {
        //     alert("game start");
        //   });
        // };

        // buttonReady.onclick = function () {
        //   console.log("ready");
        //   alert("Ready");
        //   socket.emit("ready-checked");
        //   dialog.close();
        // };
        // buttonCancel.onclick = function () {
        //   console.log("cancel");
        //   socket.emit("cancel");
        //   dialog.close();
        // };

        // drawboard();
      });
      socket.on("your-turn", function ({ turn }) {
        setTurn(turn);
        socket.turn = turn;
        drawboard();
      });

      socket.on("choose-box", function ({ turn, x, y }) {
        alert(`your opponent turn ${turn} position (${x},${y})`);
        // alert("your turn");
      });

      socket.on("error", function ({ message }) {
        alert(message);
      });
      // socket.on("choose-box", function ({ turn }) {
      //   console.log(socket);
      //   alert("your turn");
      // });
    };

    // socket.on("server-send-data", function (msg) {
    //   var item = document.createElement("button");
    //   console.log(msg);
    //   item.innerText = msg;
    //   messages.appendChild(item);
    //   window.scrollTo(0, document.body.scrollHeight);
    // });
    // socket.on("your_turn", function (msg) {
    //   var item = document.createElement("li");
    //   console.log(msg);
    //   item.textContent = msg;
    //   messages.appendChild(item);
    //   window.scrollTo(0, document.body.scrollHeight);
    // });
  </script>
</html>
